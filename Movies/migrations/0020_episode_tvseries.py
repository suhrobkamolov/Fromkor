# Generated by Django 4.1.4 on 2023-02-19 07:25

import Movies.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Movies', '0019_dailymovieviews'),
    ]

    operations = [
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('season', models.PositiveSmallIntegerField()),
                ('episode_number', models.PositiveSmallIntegerField()),
                ('duration', models.DurationField()),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TVSeries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('release_date', models.DateField()),
                ('num_seasons', models.PositiveSmallIntegerField()),
                ('description', models.TextField()),
                ('poster', models.ImageField(upload_to=Movies.models.TVSeries.upload_file_name)),
                ('trailer', models.URLField()),
                ('rating', models.FloatField()),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('MPAA_rating', models.CharField(choices=[('G', 'General Audiences'), ('PG', 'Parental Guidance Suggested'), ('PG13', 'Parents Strongly Cautioned'), ('R', 'Restricted'), ('NC17', 'No Children 17 and Under Admitted')], default='G', max_length=4)),
                ('cast', models.ManyToManyField(related_name='series', to='Movies.actor')),
                ('director', models.ManyToManyField(related_name='series', to='Movies.producer')),
                ('episodes', models.ManyToManyField(related_name='series', to='Movies.episode')),
                ('genre', models.ManyToManyField(related_name='series', to='Movies.category')),
            ],
        ),
    ]
